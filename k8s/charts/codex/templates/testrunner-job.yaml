{{- if .Values.experiment.testRunner }}
apiVersion: batch/v1
kind: Job
metadata:
  name: codex-experiment-runner-{{ include "experiment.fullId" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/component: codex-experiment-runner
    {{- include "codex-benchmarks.labels" . | nindent 4 }}

spec:
  template:
    metadata:
      labels:
        app.kubernetes.io/component: codex-experiment-runner
        {{- include "codex-benchmarks.labels" . | nindent 8 }}
      annotations:
        {{- include "codex-benchmarks.pod.annotations" . | nindent 8 }}

    spec:
      {{- with .Values.deployment.runnerNodePool }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: deluge-experiment-runner
          image: {{ include "benchmark.harness.image" . }}
          imagePullPolicy: {{ include "benchmark.harness.imagePullPolicy" . }}
          args: [ "/opt/bittorrent-benchmarks/config/codex/experiments.k8s.yaml", "run", "codex_experiment" ]
          env:
            - name: NETWORK_SIZE
              value: {{ .Values.experiment.networkSize | quote }}
            - name: SEEDERS
              value: {{ .Values.experiment.seeders | quote }}
            - name: REPETITIONS
              value: {{ .Values.experiment.repetitions | quote }}
            - name: SEEDER_SETS
              value: {{ .Values.experiment.seederSets | quote }}
            - name: FILE_SIZE
              value: {{ include "filesize.bytes" . | quote }}
            - name: CODEX_STATEFULSET
              value: {{ include "codex-nodes.statefulset" . | quote }}
            - name: CODEX_SERVICE
              value: "codex-nodes-service-{{ include "experiment.fullId" . }}"
            - name: EXPERIMENT_SET_ID
              value: {{ include "experiment.fullId" . | quote }}
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace

          resources:
            requests:
              cpu: "1"
              memory: "2Gi"
            limits:
              cpu: "1"
              memory: "2Gi"

      restartPolicy: Never

  backoffLimit: 0
{{- end }}
