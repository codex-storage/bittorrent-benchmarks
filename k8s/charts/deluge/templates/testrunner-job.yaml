apiVersion: batch/v1
kind: Job
metadata:
  name: deluge-{{ .Release.Namespace }}-testrunner
  namespace: {{ .Release.Namespace }}
  labels:
    app: deluge-{{ .Release.Namespace }}-testrunner

spec:
  template:
    metadata:
      labels:
        app: deluge-{{ .Release.Namespace }}-testrunner

    spec:
      containers:
        - name: deluge-{{ .Release.Namespace }}-testrunner
          image: codexstorage/bittorrent-benchmarks:latest
          imagePullPolicy: Always
          args: [ "run", "deluge_experiment" ]
          env:
            - name: NETWORK_SIZE
              value: {{ .Values.experiment.networkSize | quote }}
            - name: SEEDERS
              value: {{ .Values.experiment.seeders | quote }}
            - name: REPETITIONS
              value: {{ .Values.experiment.repetitions | quote }}
            - name: SEEDER_SETS
              value: {{ .Values.experiment.seederSets | quote }}
            - name: FILE_SIZE
              value: {{ include "filesize.bytes" . | quote }}
            - name: TRACKER_ANNOUNCE_URL
              value: "http://{{ include "tracker.service.name" . }}.{{ .Release.Namespace }}.svc.cluster.local:8000/announce"
            - name: SHARED_VOLUME_PATH
              value: "/opt/bittorrent-benchmarks/volume"
            - name: DELUGE_STATEFULSET
              value: "deluge-nodes-{{ .Release.Name }}"
            - name: DELUGE_SERVICE
              value: "deluge-nodes-{{ .Release.Name }}-service"
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          volumeMounts:
            - name: benchmark-volume
              mountPath: /opt/bittorrent-benchmarks/volume
          resources:
            requests:
              cpu: "1"
              memory: "2Gi"
            limits:
              cpu: "1"
              memory: "2Gi"

      volumes:
        - name: benchmark-volume
          persistentVolumeClaim:
            claimName: {{ include "deluge.pvc" . }}
      restartPolicy: Never

  backoffLimit: 0
